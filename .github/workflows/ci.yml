name: CI

env:
  JDK_JAVA_OPTIONS: '-XX:+PrintCommandLineFlags -Xmx4G'  # JDK_JAVA_OPTIONS is _the_ env. variable to use for modern Java
  JVM_OPTS: '-XX:+PrintCommandLineFlags -Xmx4G' # for Java 8 only (sadly, it is not modern enough for JDK_JAVA_OPTIONS)

on:
  pull_request:
  push:
    branches: ['master', 'series/4.x']
  release:
    types:
      - published

jobs:
  website:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.3.0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v14
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Check Document Generation
        run: ./sbt docs/compileDocs

  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: ['adopt@1.8', 'adopt@1.11']
        scala: ['2.12.18', '2.13.15', '3.4.1']
        platform: ['JS', 'JVM', 'Native']
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v14
        with:
          java-version: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Run JS tests
        if: ${{ matrix.platform == 'JS' && !startsWith(matrix.scala, '3.') }}
        run: sbt ++${{ matrix.scala }}! testJS
      - name: Run 2.12 JVM tests
        if: ${{ matrix.platform == 'JVM' && startsWith(matrix.scala, '2.12') }}
        run: sbt ++${{ matrix.scala }}! testJVM212
      - name: Run 2.13 JVM tests
        if: ${{ matrix.platform == 'JVM' && startsWith(matrix.scala, '2.13') }}
        run: sbt ++${{ matrix.scala }}! testJVM213
      - name: Run 3.x JVM tests
        if: ${{ matrix.platform == 'JVM' && startsWith(matrix.scala, '3.') }}
        run: sbt ++${{ matrix.scala }}! testJVM3x

  ci:
    runs-on: ubuntu-22.04
    needs: [website, test]
    steps:
      - name: Report successful build
        run: echo "ci passed"

  publish:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: [ci]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v14
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Release artifacts
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
